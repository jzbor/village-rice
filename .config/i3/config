# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!


### COLORS and FONTS ###
set_from_resource	$bg-color		themeBackground	    #202020
set_from_resource	$sec-color		themeForeground	    #fed7ae
set_from_resource	$urgent-bg-color	themeUrgent	    #d78272
set $text-color		    #f3f4f5
set $inactive-text-color    #676e7d
set $def-font 		    	Quicksand, Bold 11


# Set superkey
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:$def-font

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec terminator


# kill focused window; 'split toggle' is required to reset splitting orientation
#bindsym $mod+Shift+q split toggle kill
bindsym $mod+Shift+q kill


# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
#
# Using rofi instead:
# See end of file ("rofi.sh")
bindsym $mod+d exec ~/.config/rofi/win_drun.sh
bindsym $mod+Shift+d exec ~/.config/rofi/win_run.sh


# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
#bindsym $mod+h split h
bindsym $mod+c split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+y focus child


# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:"
set $ws2 "2:²"
set $ws3 "3:³"
set $ws4 "4:"
set $ws5 "5:"
set $ws6 "6:⁶"
set $ws7 "7:⁷"
set $ws8 "8:⁸"
set $ws9 "9:"
set $ws10 "10:阮"
set $wsa1 "a1:[default]"
set $wsa2 "a2:[default]"
set $wsa3 "a3:[default]"
set $wsa4 "a4:[default]"
set $wsa5 "a5:[default]"
set $wsa6 "a6:[default]"
set $wsa7 "a7:[default]"
set $wsa8 "a8:[default]"
set $wsa9 "a9:[default]"
set $wsa10 "a10:[default]"

# Define Workspace conditions and commands
set $ws1_if i3-save-tree --workspace 1 | grep -P 'name'
set $ws1_cmd
set $ws2_if i3-save-tree --workspace 2 | grep -P 'Firefox'
set $ws2_cmd firefox
set $ws3_if i3-save-tree --workspace 3 | grep -P 'Firefox'
set $ws3_cmd firefox
set $ws4_if i3-save-tree --workspace 4 | grep -P 'name'
set $ws4_cmd
set $ws5_if i3-save-tree --workspace 5 | grep -P 'name'
set $ws5_cmd
set $ws6_if i3-save-tree --workspace 6 | grep -P 'name'
set $ws6_cmd
set $ws7_if i3-save-tree --workspace 7 | grep -P 'name'
set $ws7_cmd
set $ws8_if i3-save-tree --workspace 8 | grep -P 'name'
set $ws8_cmd
set $ws9_if i3-save-tree --workspace 9 | grep -P 'Evolution'
set $ws9_cmd evolution
set $ws10_if i3-save-tree --workspace 10 | grep -P 'name'
set $ws10_cmd

# switch to workspace
bindsym $mod+1 workspace $ws1; exec --no-startup-id $ws1_if || $ws1_cmd
bindsym $mod+2 workspace $ws2; exec --no-startup-id $ws2_if || $ws2_cmd
bindsym $mod+3 workspace $ws3; exec --no-startup-id $ws3_if || $ws3_cmd
bindsym $mod+4 workspace $ws4; exec --no-startup-id $ws4_if || $ws4_cmd
bindsym $mod+5 workspace $ws5; exec --no-startup-id $ws5_if || $ws5_cmd
bindsym $mod+6 workspace $ws6; exec --no-startup-id $ws6_if || $ws6_cmd
bindsym $mod+7 workspace $ws7; exec --no-startup-id $ws7_if || $ws7_cmd
bindsym $mod+8 workspace $ws8; exec --no-startup-id $ws8_if || $ws8_cmd
bindsym $mod+9 workspace $ws9; exec --no-startup-id $ws9_if || $ws9_cmd
bindsym $mod+0 workspace $ws10; exec --no-startup-id $ws10_if || $ws10_cmd
bindsym $mod+mod1+1 workspace $wsa1
bindsym $mod+mod1+2 workspace $wsa2
bindsym $mod+mod1+3 workspace $wsa3
bindsym $mod+mod1+4 workspace $wsa4
bindsym $mod+mod1+5 workspace $wsa5
bindsym $mod+mod1+6 workspace $wsa6
bindsym $mod+mod1+7 workspace $wsa7
bindsym $mod+mod1+8 workspace $wsa8
bindsym $mod+mod1+9 workspace $wsa9
bindsym $mod+mod1+0 workspace $wsa10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10
bindsym $mod+Shift+mod1+1 move container to workspace $wsa1
bindsym $mod+Shift+mod1+2 move container to workspace $wsa2
bindsym $mod+Shift+mod1+3 move container to workspace $wsa3
bindsym $mod+Shift+mod1+4 move container to workspace $wsa4
bindsym $mod+Shift+mod1+5 move container to workspace $wsa5
bindsym $mod+Shift+mod1+6 move container to workspace $wsa6
bindsym $mod+Shift+mod1+7 move container to workspace $wsa7
bindsym $mod+Shift+mod1+8 move container to workspace $wsa8
bindsym $mod+Shift+mod1+9 move container to workspace $wsa9
bindsym $mod+Shift+mod1+0 move container to workspace $wsa10


# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"


# Configure gaps
# You can also use any non-zero value if you'd like to have a border
for_window [class=".*"] border pixel 1
gaps inner 5
gaps outer 2

# Tiling    (not working yet)
#default_orientation vertical
#for_window [class=".*"] split toggle


# Focusing on hover
focus_follows_mouse yes


# Add key shortcuts
# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
bindsym Shift+XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +1% #increase sound volume
bindsym Shift+XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -1% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# Screen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness
bindsym XF86Sleep exec dmtool lock || blurlock

# Touchpad controls
bindsym XF86TouchpadToggle exec /some/path/toggletouchpad.sh # toggle touchpad

# Media player controls
bindsym XF86AudioPlay exec ~/.config/polybar/scripts/music.sh play
bindsym XF86AudioPause exec ~/.config/polybar/scripts/music.sh pause
bindsym XF86AudioPrev exec ~/.config/polybar/scripts/music.sh prev
bindsym XF86AudioNext exec ~/.config/polybar/scripts/music.sh next
bindsym $mod+u exec ~/.config/polybar/scripts/music.sh prev
bindsym $mod+i exec ~/.config/polybar/scripts/music.sh play-pause
bindsym $mod+o exec ~/.config/polybar/scripts/music.sh next
bindsym $mod+p workspace $ws10

# Add fn/XF86 functionalities
bindsym $mod+F1 exec pavucontrol
bindsym $mod+F2 exec spotify
bindsym $mod+F3 exec lollypop
bindsym $mod+F4 exec evolution
bindsym $mod+F5 exec idea
bindsym $mod+F6 exec pycharm
bindsym $mod+F7 exec android-studio
bindsym $mod+F8 exec terminator -e nmtui
bindsym $mod+F9 exec terminator
bindsym $mod+F10 exec ~/.config/rofi.sh
bindsym $mod+F11 exec terminator -e gotop
bindsym $mod+F12 exec dolphin

bindsym XF86Tools exec terminator
bindsym XF86Search exec ~/.config/rofi.sh
bindsym XF86LaunchA exec terminator -e gotop
bindsym XF86Explorer exec dolphin

bindsym $mod+Shift+F1 exec ~/.config/i3/fn-help.sh


# Reload the configuration file
bindsym $mod+Shift+c reload

# Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Force autorandr to reload
bindsym $mod+Shift+f exec autorandr -c --force

# Exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Make ws movable between windows
bindsym $mod+Shift+Tab move workspace to output right

# Shortcut for notes
bindsym $mod+Shift+n exec terminator -e "vim ~/txtfiles/index.md"

# Cycling through workspaces
bindsym $mod+Control+Tab    workspace next
bindsym $mod+Tab    workspace back_and_forth

# Autostarts
exec --no-startup-id compton
exec --no-startup-id indicator-kdeconnect
exec --no-startup-id /usr/lib/kdeconnectd
exec spotify
exec --no-startup-id /usr/lib/geoclue-2.0/demos/agent
exec --no-startup-id redshift-gtk
exec --no-startup-id autorandr -c --force
exec --no-startup-id nextcloud --background
# Autostarts copied from manjaro-i3
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id nitrogen --restore; sleep 1; compton -b
exec --no-startup-id nm-applet
exec --no-startup-id xfce4-power-manager
exec --no-startup-id pamac-tray
exec --no-startup-id clipit
exec_always --no-startup-id ff-theme-util
exec_always --no-startup-id fix_xcursor


# Assign programms to workspaces; Get class with xorg-xprop
# spotify and others need workaround (for_window)
assign [class="Gnome-calendar"] $ws9
assign [class="Evolution"] $ws9
for_window [title="win0"] move to workspace $ws5, floating enable   # JetBrains loading frame
for_window [class="jetbrains-idea-ce" instance="^(?!sun-awt-X11-XDialogPeer$)"] move to workspace $ws5
for_window [class="jetbrains-pycharm-ce" instance="^(?!sun-awt-X11-XDialogPeer$)"] move to workspace $ws5
for_window [class="jetbrains-studio" instance="^(?!sun-awt-X11-XDialogPeer$)"] move to workspace $ws5
for_window [class="Spotify"] move to workspace $ws10
assign [class="Lollypop"] $ws10

for_window [window_role="floating"] floating enable
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable
for_window [title="antiX Control Centre"] floating enable
for_window [instance="desktop-session-exit"] floating enable
for_window [instance="st"] floating enable
for_window [title="Terminator Preferences"] floating enable



# window colors
#				border				background			text			    indicator
client.focused			$sec-color			$sec-color			$bg-color		    $sec-color
client.unfocused		$bg-color			$bg-color			$inactive-text-color	    $bg-color
client.focused_inactive		$bg-color			$bg-color			$inactive-text-color	    $bg-color
client.urgent			$urgent-bg-color		$urgent-bg-color		$text-color		    $bg-color

hide_edge_borders both

# i3bar
bar {
	status_command i3status
	mode hide
	modifier $mod+mod1
	position bottom
	strip_workspace_name yes
	tray_output primary
	tray_padding 0
	height 25
	colors{
		background $bg-color
		separator $text-color
		#				border		background	    text
		focused_workspace		$sec-color   	$sec-color 	    $bg-color
		active_workspace		$sec-color    	$bg-color	    $sec-color
		inactive_workspace		$sec-color    	$bg-color 	    $sec-color
		urgent_workspace		$sec-color    	$urgent-bg-color    $bg-color
	}
}

# Polybar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

#i3lock
bindsym $mod+shift+x exec dmtool lock || blurlock


### IMPORTANT PROGRAMS ###
# i3-gaps compton conky i3status i3lock xbacklight pactl playerctl rofi polybar

# Also remember to disable and blacklist the 'pcspkr' module to get rid of the annoying beep

